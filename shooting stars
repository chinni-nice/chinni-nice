import pgzrun
import random
from time import time


font_option = (255,255,255)

width = 800
height = 600

center_x = width / 2
center_y = height / 2

center = (center_x,
center_y)

final_level = 5
start_speed = 15
OBJECTS = ["Shooting Star","Rock"]
game_over = False
game_complete = False
current_level = 1

objEcts = []
animations = []

def draw():
    global game_over,game_complete,objEct
    screen.blit("starry bg",(0,0))
    if game_over:
        display_message("GAME OVER.."," TRY AGAIN PLEASE!")
    elif game_complete:
        display_message("YOU DID IT!","PROCEED TO NEXT LEVEL.")
    else:
        for objEct in objEcts():
            objEct.draw()

def update():
    global objEcts, current_level
    if len(objEcts) == 0:
        objEcts = make_objEcts(current_level)

def make_objEcts(number_of_extra_objEcts):
    objEcts_to_create = get_option_to_create(number_of_extra_objEcts)
    new_objEcts = create_objEcts(objEcts_to_create)
    layout_objEcts(new_objEcts)
    animate_objEcts(new_objEcts)
    return new_objEcts

def create_objEcts(objEcts_to_create):
    new_objEcts = []
    for option in objEcts_to_create:
        objEct = (Actor (option))
        new_objEcts.append(objEct)
    return new_objEcts

def get_option_to_create(number_of_extra_objEcts):
    objEcts_to_create = ["star"]
    for i in range(0,number_of_extra_objEcts):
        random_option = random.choice(OBJECTS)
        objEcts_to_create.append(random_option)
    return objEcts_to_create

def layout_objEcts(objEcts_to_layout):
    number_of_gaps = len(objEcts_to_layout) +1
    gap_size = width / number_of_gaps
    random.shuffle(objEcts_to_layout)
    for index,objEct in enumerate(objEcts_to_layout):
        new_x_pos = (index + 1) * gap_size
        objEct.x = new_x_pos

def animate_objEcts(objEcts_to_animate):
    global animations
    for objEct in objEct_to_animate:
        duration = start_speed - current_level
        objEct.anchor = ("center","bottom")
        animation = animate(objEct,duration = duration,on_finished = handle_game_over, y = height)
        animations.append(animation)

def handle_game_over():
    global game_over
    game_over = True

def on_mouse_down(pos):
    global objEcts,current_level
    for objEct in objEcts:
        if objEct.collidepoint(pos):
            if "star" in objEct.image:
                handle_game_complete()
            else:
                handle_game_over()

def handle_game_complete():
    global current_level,objEcts,animations,game_complete
    stop_animations(animations)
    if current_level == final_level:
        game_complete = True
    else:
        current_level += 1
        objEcts = []
        animations = []

def stop_animations(animations_to_stop):
        for animation in animations_to_stop:
            if animation.running:
                animation.stop()

def display_message(heading_text,subheading_text):
    screen.draw.text(heading_text,fontsize = 60,center = center,color = "white")
    screen.draw.text(subheading_text,fontsize = 30,center = (center_x,center_y + 30),color = "white")


pgzrun.go()
